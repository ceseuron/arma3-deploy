- name: Remove CDROM repository if it exists on Ubuntu 20.04
  apt_repository: 
    repo: deb [check-date=no] file:///cdrom focal main restricted
    state: absent
    update_cache: true
  when:
  - ansible_distribution == "Ubuntu"
  - ansible_distribution_version == "20.04"

- name: Remove CDROM repository if it exists on Ubuntu 22.04.
  apt_repository: 
    repo: deb [check-date=no] file:///cdrom jammy main restricted
    state: absent
    update_cache: true
  when:
  - ansible_distribution == "Ubuntu"
  - ansible_distribution_version == "22.04"

- name: Install multiverse repository.
  apt_repository:
    repo: deb http://archive.ubuntu.com/ubuntu focal multiverse
    state: present
    update_cache: true

- name: Install software-properties-common
  apt:
    name: software-properties-common
    state: present
    update_cache: true

- name: Check if i386 architecture is installed already.
  shell: dpkg --print-foreign-architectures | grep i386
  register: i386_result
  ignore_errors: true

- name: Install i386 architecture.
  command: dpkg --add-architecture i386
  when: i386_result.rc >= 1

- name: Install packages for Ubuntu 20.04.
  apt:
    name: ['lib32gcc1',
           'perl-modules', 
           'curl',
           'lsof',
           'libc6-i386',
           'bzip2',
           'vim',
           'net-tools',
           'curl',
           'wget',
           'file',
           'tar',
           'gzip',
           'unzip',
           'bsdmainutils',
           'python3',
           'util-linux',
           'ca-certificates',
           'binutils',
           'bc',
           'jq',
           'tmux',
           'netcat'
           'distro-info',
           'lib32stdc++6',
           'libsdl2-2.0-0:i386'
           ]
    state: present
    update_cache: true
  when: 
  - ansible_distribution == "Ubuntu"
  - ansible_distribution_version == "20.04"

- name: Install packages for Ubuntu 22.04.
  apt:
    name: ['lib32gcc-s1',
           'perl-modules', 
           'curl',
           'lsof',
           'libc6-i386',
           'bzip2',
           'vim',
           'net-tools',
           'curl',
           'wget',
           'file',
           'tar',
           'gzip',
           'unzip',
           'bsdmainutils',
           'python3',
           'util-linux',
           'ca-certificates',
           'binutils',
           'bc',
           'jq',
           'tmux',
           'netcat',
           'distro-info',
           'lib32stdc++6',
           'libsdl2-2.0-0:i386'
           ]
    state: present
    update_cache: true
  when: 
  - ansible_distribution == "Ubuntu"
  - ansible_distribution_version == "22.04"

- name: Auto-accept Steam license.
  debconf:
    name: "steam"
    question: "steam/question"
    value: "I AGREE"
    vtype: "select"

- name: Install package steamcmd.
  apt:
    name: steamcmd
    state: present

- name: Set open file limit for sysctl.
  sysctl:
    name: fs.file-max
    value: 100000
    state: present
    reload: yes

- name: Set PAM nofile hard limit.
  pam_limits:
    domain: "*"
    limit_item: nofile
    limit_type: hard
    value: 1000000

- name: Set PAM nofile soft limit.
  pam_limits:
    domain: "*"
    limit_item: nofile
    limit_type: soft
    value: 1000000

- name: Set PAM session requirements.
  pamd:
    name: common-session
    module_path: pam_systemd.so
    type: session
    control: optional
    new_type: session
    new_control: required
    new_module_path: pam_limits.so
    state: after

