- name: Include secret variables.
  include_vars: ./arma3-deploy/vars/secrets.yml

- name: Set up Arma3 group.
  group:
    name: "{{ arma3_group }}"
    state: present

- name: Set up Arma3 user.
  user:
    name: "{{ arma3_user }}"
    comment: Arma3 server user.
    group: "{{ arma3_group }}"
    shell: /bin/bash
    state: present

- name: Download LinuxGSM script for Arma3 deployment.
  get_url:
       url: https://linuxgsm.sh
       dest: "/home/{{ arma3_user }}/linuxgsm.sh"
       mode: +x
       group: "{{ arma3_group }}"
       owner: "{{ arma3_user }}"

- name: Check if arma3server script is already installed.
  become: true
  become_user: "{{ arma3_user }}"
  stat:
    path: "/home/{{ arma3_user }}/arma3server"
  register: arma3server_script

- name: Run LinuxGSM script.
  become: true
  become_user: "{{ arma3_user }}"
  command: "bash /home/{{ arma3_user }}/linuxgsm.sh arma3server"
  when: not arma3server_script.stat.exists

- name: Create LGSM config directory.
  file:
    path: "/home/{{ arma3_user }}/lgsm/config-lgsm/arma3server"
    group: "{{ arma3_group }}"
    owner: "{{ arma3_user }}"
    mode: '0755'
    state: directory

- name: Create LGSM configuration file from template.
  template:
    src: "./arma3-deploy/templates/lgsm_common.cfg.j2"
    dest: "/home/{{ arma3_user }}/lgsm/config-lgsm/arma3server/common.cfg"
    group: "{{ arma3_group }}"
    owner: "{{ arma3_user }}"
    mode: '0755'

- name: Check if server is already installed.
  become: true
  become_user: "{{ arma3_user }}"
  stat:
    path: "/home/{{ arma3_user }}/serverfiles/arma3server_x64"
  register: server_binary

- name: Run Arma3 Installation.
  become: true
  become_user: "{{ arma3_user }}"
  command: "bash /home/{{ arma3_user }}/arma3server auto-install"
  when: not server_binary.stat.exists